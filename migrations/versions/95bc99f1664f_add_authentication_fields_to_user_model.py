"""Add authentication fields to User model

Revision ID: 95bc99f1664f
Revises: ce04ec8201a4
Create Date: 2025-08-08 17:21:27.436526

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '95bc99f1664f'
down_revision = 'ce04ec8201a4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # First add tiktok_account_id as nullable
    with op.batch_alter_table('scheduled_posts', schema=None) as batch_op:
        batch_op.add_column(sa.Column('tiktok_account_id', sa.Integer(), nullable=True))
    
    # Delete orphaned scheduled posts if there are no tiktok accounts for them
    op.execute("""
        DELETE FROM scheduled_posts 
        WHERE user_id NOT IN (SELECT DISTINCT user_id FROM tiktok_accounts)
    """)
    
    # Set a default value for existing rows (assuming first tiktok account)
    op.execute("""
        UPDATE scheduled_posts 
        SET tiktok_account_id = (
            SELECT id FROM tiktok_accounts 
            WHERE user_id = scheduled_posts.user_id 
            LIMIT 1
        )
        WHERE tiktok_account_id IS NULL AND EXISTS (
            SELECT 1 FROM tiktok_accounts WHERE user_id = scheduled_posts.user_id
        )
    """)
    
    # If there are still scheduled_posts without tiktok_account_id, delete them
    op.execute("DELETE FROM scheduled_posts WHERE tiktok_account_id IS NULL")
    
    # Now make it NOT NULL and add foreign key
    with op.batch_alter_table('scheduled_posts', schema=None) as batch_op:
        batch_op.alter_column('tiktok_account_id', nullable=False)
        batch_op.create_foreign_key(None, 'tiktok_accounts', ['tiktok_account_id'], ['id'])

    # Handle users table - need to provide defaults for existing users
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email', sa.String(length=200), nullable=True))
        batch_op.add_column(sa.Column('password_hash', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('is_verified', sa.Boolean(), nullable=True))
    
    # Set default values for existing users
    op.execute("UPDATE users SET email = 'user' || id || '@example.com' WHERE email IS NULL")
    op.execute("UPDATE users SET password_hash = 'temp_hash' WHERE password_hash IS NULL")
    op.execute("UPDATE users SET is_active = true WHERE is_active IS NULL")
    op.execute("UPDATE users SET is_verified = false WHERE is_verified IS NULL")
    
    # Now make email and password_hash NOT NULL
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('email', nullable=False)
        batch_op.alter_column('password_hash', nullable=False)
        batch_op.drop_constraint('users_tiktok_user_id_key', type_='unique')
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.drop_column('access_token')
        batch_op.drop_column('refresh_token')
        batch_op.drop_column('following_count')
        batch_op.drop_column('video_count')
        batch_op.drop_column('token_expires_at')
        batch_op.drop_column('username')
        batch_op.drop_column('display_name')
        batch_op.drop_column('follower_count')
        batch_op.drop_column('tiktok_user_id')
        batch_op.drop_column('likes_count')
        batch_op.drop_column('avatar_url')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('avatar_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('likes_count', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('tiktok_user_id', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('follower_count', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('display_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('username', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('token_expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('video_count', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('following_count', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('refresh_token', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('access_token', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.create_unique_constraint(batch_op.f('users_tiktok_user_id_key'), ['tiktok_user_id'])
        batch_op.drop_column('is_verified')
        batch_op.drop_column('is_active')
        batch_op.drop_column('password_hash')
        batch_op.drop_column('email')

    with op.batch_alter_table('scheduled_posts', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('tiktok_account_id')

    # ### end Alembic commands ###
