"""Add multi-account support with TikTokAccount model

Revision ID: ce04ec8201a4
Revises: 
Create Date: 2025-08-07 14:41:35.121129

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ce04ec8201a4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tiktok_accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('tiktok_user_id', sa.String(length=100), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('display_name', sa.String(length=200), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('follower_count', sa.Integer(), nullable=True),
    sa.Column('following_count', sa.Integer(), nullable=True),
    sa.Column('likes_count', sa.Integer(), nullable=True),
    sa.Column('video_count', sa.Integer(), nullable=True),
    sa.Column('access_token', sa.Text(), nullable=True),
    sa.Column('refresh_token', sa.Text(), nullable=True),
    sa.Column('token_expires_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tiktok_user_id')
    )
    with op.batch_alter_table('scheduled_posts', schema=None) as batch_op:
        batch_op.add_column(sa.Column('tiktok_account_id', sa.Integer(), nullable=False))
        batch_op.create_foreign_key(None, 'tiktok_accounts', ['tiktok_account_id'], ['id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email', sa.String(length=200), nullable=True))
        batch_op.drop_constraint(batch_op.f('users_tiktok_user_id_key'), type_='unique')
        batch_op.create_unique_constraint(None, ['email'])
        batch_op.drop_column('video_count')
        batch_op.drop_column('tiktok_user_id')
        batch_op.drop_column('avatar_url')
        batch_op.drop_column('display_name')
        batch_op.drop_column('following_count')
        batch_op.drop_column('username')
        batch_op.drop_column('refresh_token')
        batch_op.drop_column('follower_count')
        batch_op.drop_column('token_expires_at')
        batch_op.drop_column('last_login')
        batch_op.drop_column('access_token')
        batch_op.drop_column('likes_count')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('likes_count', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('access_token', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('last_login', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('token_expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('follower_count', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('refresh_token', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('username', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('following_count', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('display_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('avatar_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('tiktok_user_id', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('video_count', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_unique_constraint(batch_op.f('users_tiktok_user_id_key'), ['tiktok_user_id'])
        batch_op.drop_column('email')

    with op.batch_alter_table('scheduled_posts', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('tiktok_account_id')

    op.drop_table('tiktok_accounts')
    # ### end Alembic commands ###
